@model YuGiOhDeckEditor.Entities.DeckInfo

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Deck Information</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OwnerId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OwnerId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
    </dl>
</div>

<h4>Cards in Deck</h4>
<hr />
@if (Model.Cards != null && Model.Cards.Any())
{
    <ul>
        @foreach (var card in Model.Cards)
        {
            <li>
                <strong>@card.Name</strong> - @card.Type <br />
                ATK: @card.AttackPoints | DEF: @card.DefencePoints <br />
                Attribute: @card.Attribute <br />
            </li>
        }
    </ul>
}
else
{
    <p>No cards in this deck yet.</p>
}

<div>
    <a asp-action="AddCard" asp-route-id="@Model?.Id">Add a Card</a>
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
